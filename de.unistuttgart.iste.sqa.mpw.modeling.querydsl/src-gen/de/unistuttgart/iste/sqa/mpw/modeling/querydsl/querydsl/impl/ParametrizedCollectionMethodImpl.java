/**
 * generated by Xtext 2.23.0
 */
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl;

import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.Expression;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.ParametrizedCollectionMethod;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.QuerydslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parametrized Collection Method</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl.ParametrizedCollectionMethodImpl#getTypeSelect <em>Type Select</em>}</li>
 *   <li>{@link de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl.ParametrizedCollectionMethodImpl#getIndexExpression <em>Index Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParametrizedCollectionMethodImpl extends CollectionMethodImpl implements ParametrizedCollectionMethod
{
  /**
   * The default value of the '{@link #getTypeSelect() <em>Type Select</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeSelect()
   * @generated
   * @ordered
   */
  protected static final String TYPE_SELECT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTypeSelect() <em>Type Select</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeSelect()
   * @generated
   * @ordered
   */
  protected String typeSelect = TYPE_SELECT_EDEFAULT;

  /**
   * The cached value of the '{@link #getIndexExpression() <em>Index Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexExpression()
   * @generated
   * @ordered
   */
  protected Expression indexExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParametrizedCollectionMethodImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QuerydslPackage.Literals.PARAMETRIZED_COLLECTION_METHOD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTypeSelect()
  {
    return typeSelect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypeSelect(String newTypeSelect)
  {
    String oldTypeSelect = typeSelect;
    typeSelect = newTypeSelect;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__TYPE_SELECT, oldTypeSelect, typeSelect));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getIndexExpression()
  {
    return indexExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIndexExpression(Expression newIndexExpression, NotificationChain msgs)
  {
    Expression oldIndexExpression = indexExpression;
    indexExpression = newIndexExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION, oldIndexExpression, newIndexExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndexExpression(Expression newIndexExpression)
  {
    if (newIndexExpression != indexExpression)
    {
      NotificationChain msgs = null;
      if (indexExpression != null)
        msgs = ((InternalEObject)indexExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION, null, msgs);
      if (newIndexExpression != null)
        msgs = ((InternalEObject)newIndexExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION, null, msgs);
      msgs = basicSetIndexExpression(newIndexExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION, newIndexExpression, newIndexExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION:
        return basicSetIndexExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__TYPE_SELECT:
        return getTypeSelect();
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION:
        return getIndexExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__TYPE_SELECT:
        setTypeSelect((String)newValue);
        return;
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION:
        setIndexExpression((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__TYPE_SELECT:
        setTypeSelect(TYPE_SELECT_EDEFAULT);
        return;
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION:
        setIndexExpression((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__TYPE_SELECT:
        return TYPE_SELECT_EDEFAULT == null ? typeSelect != null : !TYPE_SELECT_EDEFAULT.equals(typeSelect);
      case QuerydslPackage.PARAMETRIZED_COLLECTION_METHOD__INDEX_EXPRESSION:
        return indexExpression != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (typeSelect: ");
    result.append(typeSelect);
    result.append(')');
    return result.toString();
  }

} //ParametrizedCollectionMethodImpl
