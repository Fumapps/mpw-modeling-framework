/*
 * generated by Xtext 2.23.0
 */
grammar InternalQueryDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.services.QueryDslGrammarAccess;

}

@parser::members {

 	private QueryDslGrammarAccess grammarAccess;

    public InternalQueryDslParser(TokenStream input, QueryDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected QueryDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getModelAccess().getContextParserRuleCall());
	}
	this_Context_0=ruleContext
	{
		$current = $this_Context_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContextAccess().getClassContextParserRuleCall_0());
		}
		this_ClassContext_0=ruleClassContext
		{
			$current = $this_ClassContext_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContextAccess().getCommandContextParserRuleCall_1());
		}
		this_CommandContext_1=ruleCommandContext
		{
			$current = $this_CommandContext_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassContext
entryRuleClassContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassContextRule()); }
	iv_ruleClassContext=ruleClassContext
	{ $current=$iv_ruleClassContext.current; }
	EOF;

// Rule ClassContext
ruleClassContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_className_1_0=RULE_ID
				{
					newLeafNode(lv_className_1_0, grammarAccess.getClassContextAccess().getClassNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassContextRule());
					}
					setWithLastConsumed(
						$current,
						"className",
						lv_className_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassContextAccess().getElementsElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassContextRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleCommandContext
entryRuleCommandContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandContextRule()); }
	iv_ruleCommandContext=ruleCommandContext
	{ $current=$iv_ruleCommandContext.current; }
	EOF;

// Rule CommandContext
ruleCommandContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommandContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_className_1_0=RULE_ID
				{
					newLeafNode(lv_className_1_0, grammarAccess.getCommandContextAccess().getClassNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandContextRule());
					}
					setWithLastConsumed(
						$current,
						"className",
						lv_className_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='::'
		{
			newLeafNode(otherlv_2, grammarAccess.getCommandContextAccess().getColonColonKeyword_2());
		}
		(
			(
				lv_commandName_3_0=RULE_ID
				{
					newLeafNode(lv_commandName_3_0, grammarAccess.getCommandContextAccess().getCommandNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandContextRule());
					}
					setWithLastConsumed(
						$current,
						"commandName",
						lv_commandName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getCommandContextAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandContextAccess().getParameterListParameterListParserRuleCall_4_1_0());
					}
					lv_parameterList_5_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandContextRule());
						}
						set(
							$current,
							"parameterList",
							lv_parameterList_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getCommandContextAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandContextAccess().getElementsElementParserRuleCall_5_0());
				}
				lv_elements_7_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandContextRule());
					}
					add(
						$current,
						"elements",
						lv_elements_7_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getQueryParserRuleCall_0());
		}
		this_Query_0=ruleQuery
		{
			$current = $this_Query_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getCommandConstraintParserRuleCall_1());
		}
		this_CommandConstraint_1=ruleCommandConstraint
		{
			$current = $this_CommandConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getInvariantParserRuleCall_2());
		}
		this_Invariant_2=ruleInvariant
		{
			$current = $this_Invariant_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_documentation_0_0=RULE_DOCUMENTATION
				{
					newLeafNode(lv_documentation_0_0, grammarAccess.getQueryAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"documentation",
						lv_documentation_0_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.DOCUMENTATION");
				}
			)
		)?
		(
			(
				lv_internal_1_0='internal'
				{
					newLeafNode(lv_internal_1_0, grammarAccess.getQueryAccess().getInternalInternalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed($current, "internal", lv_internal_1_0 != null, "internal");
				}
			)
		)?
		otherlv_2='query'
		{
			newLeafNode(otherlv_2, grammarAccess.getQueryAccess().getQueryKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getQueryAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryAccess().getParameterListParameterListParserRuleCall_4_1_0());
					}
					lv_parameterList_5_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryRule());
						}
						set(
							$current,
							"parameterList",
							lv_parameterList_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getQueryAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getQueryAccess().getColonKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryAccess().getExpressionsExpressionParserRuleCall_6_0_0());
					}
					lv_expressions_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_8_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getQueryAccess().getSemicolonKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleCommandConstraint
entryRuleCommandConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandConstraintRule()); }
	iv_ruleCommandConstraint=ruleCommandConstraint
	{ $current=$iv_ruleCommandConstraint.current; }
	EOF;

// Rule CommandConstraint
ruleCommandConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandConstraintAccess().getPreconditionParserRuleCall_0());
		}
		this_Precondition_0=rulePrecondition
		{
			$current = $this_Precondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandConstraintAccess().getPostconditionParserRuleCall_1());
		}
		this_Postcondition_1=rulePostcondition
		{
			$current = $this_Postcondition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrecondition
entryRulePrecondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionRule()); }
	iv_rulePrecondition=rulePrecondition
	{ $current=$iv_rulePrecondition.current; }
	EOF;

// Rule Precondition
rulePrecondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_documentation_0_0=RULE_DOCUMENTATION
				{
					newLeafNode(lv_documentation_0_0, grammarAccess.getPreconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreconditionRule());
					}
					setWithLastConsumed(
						$current,
						"documentation",
						lv_documentation_0_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.DOCUMENTATION");
				}
			)
		)?
		otherlv_1='precondition'
		{
			newLeafNode(otherlv_1, grammarAccess.getPreconditionAccess().getPreconditionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPreconditionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreconditionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getPreconditionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPreconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0());
					}
					lv_expressions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreconditionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_4_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getPreconditionAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRulePostcondition
entryRulePostcondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostconditionRule()); }
	iv_rulePostcondition=rulePostcondition
	{ $current=$iv_rulePostcondition.current; }
	EOF;

// Rule Postcondition
rulePostcondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_documentation_0_0=RULE_DOCUMENTATION
				{
					newLeafNode(lv_documentation_0_0, grammarAccess.getPostconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostconditionRule());
					}
					setWithLastConsumed(
						$current,
						"documentation",
						lv_documentation_0_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.DOCUMENTATION");
				}
			)
		)?
		otherlv_1='postcondition'
		{
			newLeafNode(otherlv_1, grammarAccess.getPostconditionAccess().getPostconditionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPostconditionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostconditionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getPostconditionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPostconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0());
					}
					lv_expressions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPostconditionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_4_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getPostconditionAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_0_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_variableName_0_0=RULE_ID
				{
					newLeafNode(lv_variableName_0_0, grammarAccess.getParameterAccess().getVariableNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"variableName",
						lv_variableName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				lv_typeName_2_0=RULE_ID
				{
					newLeafNode(lv_typeName_2_0, grammarAccess.getParameterAccess().getTypeNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"typeName",
						lv_typeName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	iv_ruleInvariant=ruleInvariant
	{ $current=$iv_ruleInvariant.current; }
	EOF;

// Rule Invariant
ruleInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_documentation_0_0=RULE_DOCUMENTATION
				{
					newLeafNode(lv_documentation_0_0, grammarAccess.getInvariantAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"documentation",
						lv_documentation_0_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.DOCUMENTATION");
				}
			)
		)?
		otherlv_1='invariant'
		{
			newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getInvariantKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getInvariantAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInvariantAccess().getExpressionsExpressionParserRuleCall_4_0_0());
					}
					lv_expressions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInvariantRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_4_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getInvariantAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getImpliesExpressionParserRuleCall());
	}
	this_ImpliesExpression_0=ruleImpliesExpression
	{
		$current = $this_ImpliesExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImpliesExpressionRule()); }
	iv_ruleImpliesExpression=ruleImpliesExpression
	{ $current=$iv_ruleImpliesExpression.current; }
	EOF;

// Rule ImpliesExpression
ruleImpliesExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0());
		}
		this_OrExpression_0=ruleOrExpression
		{
			$current = $this_OrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getImpliesExpressionAccess().getImpliesExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='implies'
			{
				newLeafNode(otherlv_2, grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrExpressionAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndExpressionAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getComparisonExpressionParserRuleCall_0());
		}
		this_ComparisonExpression_0=ruleComparisonExpression
		{
			$current = $this_ComparisonExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operation_2_1='='
						{
							newLeafNode(lv_operation_2_1, grammarAccess.getEqualityExpressionAccess().getOperationEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "operation", lv_operation_2_1, null);
						}
						    |
						lv_operation_2_2='<>'
						{
							newLeafNode(lv_operation_2_2, grammarAccess.getEqualityExpressionAccess().getOperationLessThanSignGreaterThanSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "operation", lv_operation_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparisonExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.ComparisonExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPlusOrMinusExpressionParserRuleCall_0());
		}
		this_PlusOrMinusExpression_0=rulePlusOrMinusExpression
		{
			$current = $this_PlusOrMinusExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='>='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='<='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='>'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='<'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRightPlusOrMinusExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinusExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.PlusOrMinusExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinusExpression
entryRulePlusOrMinusExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusExpressionRule()); }
	iv_rulePlusOrMinusExpression=rulePlusOrMinusExpression
	{ $current=$iv_rulePlusOrMinusExpression.current; }
	EOF;

// Rule PlusOrMinusExpression
rulePlusOrMinusExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusExpressionAccess().getMultiplicationOrDivisionExpressionParserRuleCall_0());
		}
		this_MultiplicationOrDivisionExpression_0=ruleMultiplicationOrDivisionExpression
		{
			$current = $this_MultiplicationOrDivisionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusExpressionAccess().getPlusExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusExpressionAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusExpressionAccess().getMinusExpressionLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusExpressionAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusExpressionAccess().getRightMultiplicationOrDivisionExpressionParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMultiplicationOrDivisionExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.MultiplicationOrDivisionExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicationOrDivisionExpression
entryRuleMultiplicationOrDivisionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationOrDivisionExpressionRule()); }
	iv_ruleMultiplicationOrDivisionExpression=ruleMultiplicationOrDivisionExpression
	{ $current=$iv_ruleMultiplicationOrDivisionExpression.current; }
	EOF;

// Rule MultiplicationOrDivisionExpression
ruleMultiplicationOrDivisionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationOrDivisionExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getMultiplicationOrDivisionExpressionAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationOrDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getMultiplicationOrDivisionExpressionAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationOrDivisionExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getNotExpressionAction_1_0(),
						$current);
				}
			)
			otherlv_4='!'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryExpressionAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_expression_5_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyPathExpressionParserRuleCall_2());
		}
		this_PropertyPathExpression_6=rulePropertyPathExpression
		{
			$current = $this_PropertyPathExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOldValueExpressionParserRuleCall_3());
		}
		this_OldValueExpression_7=ruleOldValueExpression
		{
			$current = $this_OldValueExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantExpressionParserRuleCall_4());
		}
		this_ConstantExpression_8=ruleConstantExpression
		{
			$current = $this_ConstantExpression_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	iv_ruleConstantExpression=ruleConstantExpression
	{ $current=$iv_ruleConstantExpression.current; }
	EOF;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1='true'
						{
							newLeafNode(lv_value_5_1, grammarAccess.getConstantExpressionAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConstantExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2='false'
						{
							newLeafNode(lv_value_5_2, grammarAccess.getConstantExpressionAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConstantExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getNullConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_7_0='null'
					{
						newLeafNode(lv_value_7_0, grammarAccess.getConstantExpressionAccess().getValueNullKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantExpressionRule());
						}
						setWithLastConsumed($current, "value", lv_value_7_0, "null");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOldValueExpression
entryRuleOldValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOldValueExpressionRule()); }
	iv_ruleOldValueExpression=ruleOldValueExpression
	{ $current=$iv_ruleOldValueExpression.current; }
	EOF;

// Rule OldValueExpression
ruleOldValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOldValueExpressionAccess().getOldValueExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='old'
		{
			newLeafNode(otherlv_1, grammarAccess.getOldValueExpressionAccess().getOldKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getOldValueExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOldValueExpressionAccess().getExpressionPropertyPathExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=rulePropertyPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOldValueExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.PropertyPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getOldValueExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePropertyPathExpression
entryRulePropertyPathExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyPathExpressionRule()); }
	iv_rulePropertyPathExpression=rulePropertyPathExpression
	{ $current=$iv_rulePropertyPathExpression.current; }
	EOF;

// Rule PropertyPathExpression
rulePropertyPathExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyPathExpressionAccess().getStatementsExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyPathExpressionAccess().getStatementsStatementParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyPathExpressionRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyPathExpressionAccess().getStatementsNavigatedStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleNavigatedStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyPathExpressionRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.NavigatedStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_target_0_0='self'
				{
					newLeafNode(lv_target_0_0, grammarAccess.getStatementAccess().getTargetSelfKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatementRule());
					}
					setWithLastConsumed($current, "target", lv_target_0_0, "self");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getTargetDirectionParserRuleCall_1_0());
				}
				lv_target_1_0=ruleDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"target",
						lv_target_1_0,
						"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Direction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_target_2_0=RULE_ID
				{
					newLeafNode(lv_target_2_0, grammarAccess.getStatementAccess().getTargetIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatementRule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNavigatedStatement
entryRuleNavigatedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatedStatementRule()); }
	iv_ruleNavigatedStatement=ruleNavigatedStatement
	{ $current=$iv_ruleNavigatedStatement.current; }
	EOF;

// Rule NavigatedStatement
ruleNavigatedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatedStatementAccess().getMethodCallMethodCallParserRuleCall_0_1_0());
					}
					lv_methodCall_1_0=ruleMethodCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatedStatementRule());
						}
						set(
							$current,
							"methodCall",
							lv_methodCall_1_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.MethodCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_1_0());
			}
			(
				(
					lv_target_3_0=RULE_ID
					{
						newLeafNode(lv_target_3_0, grammarAccess.getNavigatedStatementAccess().getTargetIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNavigatedStatementRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='->'
			{
				newLeafNode(otherlv_4, grammarAccess.getNavigatedStatementAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatedStatementAccess().getCollectionTargetCollectionMethodParserRuleCall_2_1_0());
					}
					lv_collectionTarget_5_0=ruleCollectionMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatedStatementRule());
						}
						set(
							$current,
							"collectionTarget",
							lv_collectionTarget_5_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.CollectionMethod");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMethodCall
entryRuleMethodCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCallRule()); }
	iv_ruleMethodCall=ruleMethodCall
	{ $current=$iv_ruleMethodCall.current; }
	EOF;

// Rule MethodCall
ruleMethodCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_targetMethod_0_0=RULE_ID
				{
					newLeafNode(lv_targetMethod_0_0, grammarAccess.getMethodCallAccess().getTargetMethodIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodCallRule());
					}
					setWithLastConsumed(
						$current,
						"targetMethod",
						lv_targetMethod_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						lv_parameters_2_0=RULE_ID
						{
							newLeafNode(lv_parameters_2_0, grammarAccess.getMethodCallAccess().getParametersIDTerminalRuleCall_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodCallRule());
							}
							addWithLastConsumed(
								$current,
								"parameters",
								lv_parameters_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)*
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
			    |
			otherlv_4='()'
			{
				newLeafNode(otherlv_4, grammarAccess.getMethodCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleCollectionMethod
entryRuleCollectionMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionMethodRule()); }
	iv_ruleCollectionMethod=ruleCollectionMethod
	{ $current=$iv_ruleCollectionMethod.current; }
	EOF;

// Rule CollectionMethod
ruleCollectionMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionMethodAccess().getSimpleCollectionMethodParserRuleCall_0());
		}
		this_SimpleCollectionMethod_0=ruleSimpleCollectionMethod
		{
			$current = $this_SimpleCollectionMethod_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionMethodAccess().getParametrizedCollectionMethodParserRuleCall_1());
		}
		this_ParametrizedCollectionMethod_1=ruleParametrizedCollectionMethod
		{
			$current = $this_ParametrizedCollectionMethod_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleCollectionMethod
entryRuleSimpleCollectionMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleCollectionMethodRule()); }
	iv_ruleSimpleCollectionMethod=ruleSimpleCollectionMethod
	{ $current=$iv_ruleSimpleCollectionMethod.current; }
	EOF;

// Rule SimpleCollectionMethod
ruleSimpleCollectionMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_method_0_1='notEmpty'
					{
						newLeafNode(lv_method_0_1, grammarAccess.getSimpleCollectionMethodAccess().getMethodNotEmptyKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleCollectionMethodRule());
						}
						setWithLastConsumed($current, "method", lv_method_0_1, null);
					}
					    |
					lv_method_0_2='isEmpty'
					{
						newLeafNode(lv_method_0_2, grammarAccess.getSimpleCollectionMethodAccess().getMethodIsEmptyKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleCollectionMethodRule());
						}
						setWithLastConsumed($current, "method", lv_method_0_2, null);
					}
					    |
					lv_method_0_3='size'
					{
						newLeafNode(lv_method_0_3, grammarAccess.getSimpleCollectionMethodAccess().getMethodSizeKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleCollectionMethodRule());
						}
						setWithLastConsumed($current, "method", lv_method_0_3, null);
					}
				)
			)
		)
		otherlv_1='()'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleCollectionMethodAccess().getLeftParenthesisRightParenthesisKeyword_1());
		}
	)
;

// Entry rule entryRuleParametrizedCollectionMethod
entryRuleParametrizedCollectionMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametrizedCollectionMethodRule()); }
	iv_ruleParametrizedCollectionMethod=ruleParametrizedCollectionMethod
	{ $current=$iv_ruleParametrizedCollectionMethod.current; }
	EOF;

// Rule ParametrizedCollectionMethod
ruleParametrizedCollectionMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='typeSelect('
			{
				newLeafNode(otherlv_0, grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectKeyword_0_0());
			}
			(
				(
					lv_typeSelect_1_0=RULE_ID
					{
						newLeafNode(lv_typeSelect_1_0, grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParametrizedCollectionMethodRule());
						}
						setWithLastConsumed(
							$current,
							"typeSelect",
							lv_typeSelect_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3='at('
			{
				newLeafNode(otherlv_3, grammarAccess.getParametrizedCollectionMethodAccess().getAtKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParametrizedCollectionMethodAccess().getIndexExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_indexExpression_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametrizedCollectionMethodRule());
						}
						set(
							$current,
							"indexExpression",
							lv_indexExpression_4_0,
							"de.unistuttgart.iste.sqa.mpw.modeling.querydsl.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleDirection
entryRuleDirection returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDirectionRule()); }
	iv_ruleDirection=ruleDirection
	{ $current=$iv_ruleDirection.current.getText(); }
	EOF;

// Rule Direction
ruleDirection returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='EAST'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDirectionAccess().getEASTKeyword_0());
		}
		    |
		kw='WEST'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDirectionAccess().getWESTKeyword_1());
		}
		    |
		kw='SOUTH'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDirectionAccess().getSOUTHKeyword_2());
		}
		    |
		kw='NORTH'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDirectionAccess().getNORTHKeyword_3());
		}
	)
;

RULE_DOCUMENTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
