/**
 * generated by Xtext 2.23.0
 */
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl;

import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.CollectionMethod;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.MethodCall;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.QuerydslPackage;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.Statement;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl.StatementImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl.StatementImpl#getMethodCall <em>Method Call</em>}</li>
 *   <li>{@link de.unistuttgart.iste.sqa.mpw.modeling.querydsl.querydsl.impl.StatementImpl#getCollectionTarget <em>Collection Target</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementImpl extends MinimalEObjectImpl.Container implements Statement
{
  /**
   * The default value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected static final String TARGET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected String target = TARGET_EDEFAULT;

  /**
   * The cached value of the '{@link #getMethodCall() <em>Method Call</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodCall()
   * @generated
   * @ordered
   */
  protected MethodCall methodCall;

  /**
   * The cached value of the '{@link #getCollectionTarget() <em>Collection Target</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCollectionTarget()
   * @generated
   * @ordered
   */
  protected CollectionMethod collectionTarget;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QuerydslPackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(String newTarget)
  {
    String oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuerydslPackage.STATEMENT__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodCall getMethodCall()
  {
    return methodCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMethodCall(MethodCall newMethodCall, NotificationChain msgs)
  {
    MethodCall oldMethodCall = methodCall;
    methodCall = newMethodCall;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QuerydslPackage.STATEMENT__METHOD_CALL, oldMethodCall, newMethodCall);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethodCall(MethodCall newMethodCall)
  {
    if (newMethodCall != methodCall)
    {
      NotificationChain msgs = null;
      if (methodCall != null)
        msgs = ((InternalEObject)methodCall).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.STATEMENT__METHOD_CALL, null, msgs);
      if (newMethodCall != null)
        msgs = ((InternalEObject)newMethodCall).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.STATEMENT__METHOD_CALL, null, msgs);
      msgs = basicSetMethodCall(newMethodCall, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuerydslPackage.STATEMENT__METHOD_CALL, newMethodCall, newMethodCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CollectionMethod getCollectionTarget()
  {
    return collectionTarget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCollectionTarget(CollectionMethod newCollectionTarget, NotificationChain msgs)
  {
    CollectionMethod oldCollectionTarget = collectionTarget;
    collectionTarget = newCollectionTarget;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QuerydslPackage.STATEMENT__COLLECTION_TARGET, oldCollectionTarget, newCollectionTarget);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCollectionTarget(CollectionMethod newCollectionTarget)
  {
    if (newCollectionTarget != collectionTarget)
    {
      NotificationChain msgs = null;
      if (collectionTarget != null)
        msgs = ((InternalEObject)collectionTarget).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.STATEMENT__COLLECTION_TARGET, null, msgs);
      if (newCollectionTarget != null)
        msgs = ((InternalEObject)newCollectionTarget).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QuerydslPackage.STATEMENT__COLLECTION_TARGET, null, msgs);
      msgs = basicSetCollectionTarget(newCollectionTarget, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QuerydslPackage.STATEMENT__COLLECTION_TARGET, newCollectionTarget, newCollectionTarget));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QuerydslPackage.STATEMENT__METHOD_CALL:
        return basicSetMethodCall(null, msgs);
      case QuerydslPackage.STATEMENT__COLLECTION_TARGET:
        return basicSetCollectionTarget(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QuerydslPackage.STATEMENT__TARGET:
        return getTarget();
      case QuerydslPackage.STATEMENT__METHOD_CALL:
        return getMethodCall();
      case QuerydslPackage.STATEMENT__COLLECTION_TARGET:
        return getCollectionTarget();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QuerydslPackage.STATEMENT__TARGET:
        setTarget((String)newValue);
        return;
      case QuerydslPackage.STATEMENT__METHOD_CALL:
        setMethodCall((MethodCall)newValue);
        return;
      case QuerydslPackage.STATEMENT__COLLECTION_TARGET:
        setCollectionTarget((CollectionMethod)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QuerydslPackage.STATEMENT__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case QuerydslPackage.STATEMENT__METHOD_CALL:
        setMethodCall((MethodCall)null);
        return;
      case QuerydslPackage.STATEMENT__COLLECTION_TARGET:
        setCollectionTarget((CollectionMethod)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QuerydslPackage.STATEMENT__TARGET:
        return TARGET_EDEFAULT == null ? target != null : !TARGET_EDEFAULT.equals(target);
      case QuerydslPackage.STATEMENT__METHOD_CALL:
        return methodCall != null;
      case QuerydslPackage.STATEMENT__COLLECTION_TARGET:
        return collectionTarget != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (target: ");
    result.append(target);
    result.append(')');
    return result.toString();
  }

} //StatementImpl
