«IMPORT ecore»
«IMPORT generationAnnotations»

«EXTENSION template::cpp::GeneratorExtensions»

«REM»
  Generate entity ecore files.
«ENDREM»
«DEFINE main FOR List[EPackage]»
    «EXPAND EcoreFile FOREACH this»
«ENDDEFINE»

«DEFINE EcoreFile FOR EPackage»
    «EXPAND CppClass FOREACH this.eClassifiers.typeSelect(EClass)
                                 .reject(c|c.interface)
                                 .reject(c|c.isValueType())
                                 .reject(c|c.isFacade())»
    «EXPAND CppStubClass FOREACH this.eClassifiers.typeSelect(EClass)
                                 .select(c|c.isFacade())»
    «EXPAND template::cpp::types::ValueTypeTemplate::ValueTypeTemplate FOREACH this.eClassifiers.typeSelect(EClass).select(c|c.isValueType())»
    «EXPAND CppInterface FOREACH this.eClassifiers.typeSelect(EClass).select(c|c.interface)»
    «EXPAND CppEnum FOREACH this.eClassifiers.typeSelect(EEnum)»
«ENDDEFINE»

«DEFINE CppClass FOR EClass»
    «EXPAND CppClassHeader FOR this»
    «EXPAND CppClassSource FOR this»
«ENDDEFINE»

«DEFINE CppClassHeader FOR EClass»
    «FILE "generated/" + name + ".h"»
    
    #ifndef «this.toCppIncludeGuard()»
    #define «this.toCppIncludeGuard()»
    
    «EXPAND template::cpp::types::ImportUsedTypesTemplate::HeaderImportDefinitions FOR this»
    
    «EXPAND template::cpp::types::ImportUsedTypesTemplate::ForwardDeclarations FOR this»
    
    namespace «this.ePackage.name» {
    
    class «this.name» «this.toInheritance()» {
    
    private:
    
      «this.toInheritedAlias()-»
    
      «EXPAND template::cpp::properties::PropertyTemplate::PropertyDefinitions FOR this»
      
    public:
      «EXPAND template::cpp::properties::PropertyTemplate::ConstructorDeclaration FOR this»
      «EXPAND template::cpp::QueriesTemplate::QueryDeclarations FOR this»
      «EXPAND template::cpp::commands::CommandCallsTemplate::CommandDefinitions FOR this»
      «EXPAND template::cpp::properties::PropertyTemplate::GetPropertyDeclarations FOR this»
      «EXPAND template::cpp::properties::PropertyTemplate::GetPropertyValueDeclarations FOR this»
      «EXPAND template::cpp::properties::PropertyTemplate::SetPropertyValueDeclarations FOR this»
      «EXPAND template::cpp::properties::PropertyTemplate::VirtualBaseMethodDelegateDefinitions FOR this»
      
    public:
    
      virtual ~«this.name»() = default;
        
      «FOREACH eOperations AS o-»
      «o.operationToSignature()» = 0;
      «ENDFOREACH-»
      
      «EXPAND template::cpp::properties::ReflectivePropertyAccessorsTemplate::ReflectivePropertyMethodDeclarations FOR this»

    };
    
    }
    
    #endif //«this.toCppIncludeGuard()»
    
    «ENDFILE»
«ENDDEFINE»

«DEFINE CppClassSource FOR EClass»
    «FILE "generated/" + name + ".cpp"»#include "«name».h"
    
    «EXPAND template::cpp::types::ImportUsedTypesTemplate::SourceImportDefinitions FOR this»
    
    namespace «this.ePackage.name» {
    
        «EXPAND template::cpp::properties::PropertyTemplate::ConstructorDefinition FOR this»
        «EXPAND template::cpp::QueriesTemplate::QueryDefinitions FOR this»
        «EXPAND template::cpp::properties::PropertyTemplate::GetPropertyDefinitions FOR this»
        «EXPAND template::cpp::properties::PropertyTemplate::GetPropertyValueDefinitions FOR this»
        «EXPAND template::cpp::properties::PropertyTemplate::SetPropertyValueDefinitions FOR this»
        «FOREACH eOperations AS o»
        // TODO «o.operationToSignature()»;
        «ENDFOREACH»
        
        «EXPAND template::cpp::properties::ReflectivePropertyAccessorsTemplate::ReflectivePropertyMethodSources FOR this»
    }
    «ENDFILE»
«ENDDEFINE»

«REM»DUMMY«ENDREM»
«DEFINE CppStubClass FOR EClass»
    «FILE "generated/" + name + ".h"»
    
    #ifndef «this.toCppIncludeGuard()»
    #define «this.toCppIncludeGuard()»
    
    namespace «this.ePackage.name» {
    
    class «this.name» {
    
    public:
    
      virtual ~«this.name»() = default;
    };
    
    }
    
    #endif //«this.toCppIncludeGuard()»
    
    «ENDFILE»
«ENDDEFINE»

«DEFINE CppInterface FOR EClass»
    «FILE "generated/" + name + ".h"»
    
    #ifndef «this.toCppIncludeGuard()»
    #define «this.toCppIncludeGuard()»
    
    «EXPAND template::cpp::types::ImportUsedTypesTemplate::HeaderImportDefinitions FOR this»
    
    «EXPAND template::cpp::types::ImportUsedTypesTemplate::ForwardDeclarations FOR this»
    
    namespace «this.ePackage.name» {
    
    class «this.name» «this.toInheritance()» «IF name == "Entity"»: public std::enable_shared_from_this<Entity>, public ReflectivePropertyObject«ENDIF» {
    
    public:
    
      virtual ~«this.name»() = default;
        
      «FOREACH eOperations AS o»
      «o.operationToSignature()» = 0;
      «IF o.isPropertyGetter()-»
      «o.operationToObservableGetterSignature()» = 0;
      «ENDIF-»
      «ENDFOREACH»
      «EXPAND GenerationAnnotation FOREACH eAnnotations»
    };
    
    }
    
    #endif //«this.toCppIncludeGuard()»
    
    «ENDFILE»
«ENDDEFINE»

«DEFINE CppEnum FOR EEnum»
    «FILE "generated/" + name + ".h"»
    
    #ifndef «this.toCppIncludeGuard()»
    #define «this.toCppIncludeGuard()»
    
    namespace «this.ePackage.name» {
    
    enum class «this.name» {
      «FOREACH eLiterals AS l SEPARATOR ", "»
      «l»
	  «ENDFOREACH»
    };
    
    }
    
    #endif //«this.toCppIncludeGuard()»
    
    «ENDFILE»
«ENDDEFINE»

«DEFINE GenerationAnnotation FOR EAnnotation»«ENDDEFINE»

«DEFINE GenerationAnnotation FOR GetPropertyDeclarationAnnotation»
    // «fieldTypeName» «getterName»();
«ENDDEFINE»

«DEFINE CMakeLists FOR List[EPackage]»
    «FILE "generated/CMakeLists.txt"-»
    
add_subdirectory(commands)
    
set(GEN_SRCS ${GEN_SRCS}
    «FOREACH this.eClassifiers.typeSelect(EClass)
                              .reject(c|c.isDataType())
                              .reject(c|c.interface)
                              .reject(c|c.isFacade()) AS c-»
    "core/src/generated/«c.name».cpp"
    «ENDFOREACH-»
    «FOREACH this.eClassifiers.typeSelect(EClass)
                              .reject(c|c.isDataType()) AS c-»
    "core/src/generated/«c.name».h"
    «ENDFOREACH-»
    «FOREACH this.eClassifiers.typeSelect(EEnum) AS c-»
    "core/src/generated/«c.name».h"
    «ENDFOREACH-»
    ${GEN_COMMAND_SRCS}
    PARENT_SCOPE)

    «ENDFILE»
«ENDDEFINE»
