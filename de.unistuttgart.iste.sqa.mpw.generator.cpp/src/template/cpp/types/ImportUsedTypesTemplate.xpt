«IMPORT ecore»

«EXTENSION template::cpp::GeneratorExtensions»

«DEFINE HeaderImportDefinitions FOR EClass»
    #include <memory>
    #include <string>
    «IF name == "Entity"-»
    #include "ReflectivePropertyObject.h"
    «ENDIF-»
	«IF eStructuralFeatures.union(eOperations).exists(e|e.isCollection())-»
    #include <list>
	«ENDIF-»
    «IF eStructuralFeatures.exists(f|f.isObservableProperty()) ||
        eOperations.exists(o|o.isPropertyGetter())-»
	#include "ObservableProperties.h"
    «ENDIF-»
	«IF eStructuralFeatures.exists(f|f.isObservableProperty() && f.isCollection())-»
	#include "ObservableLists.h"
	«ENDIF-»
    «EXPAND SingleImportDefinition FOREACH eSuperTypes
        .union(eStructuralFeatures.collect(f|f.eType).select(t|t.isEnum() || t.isValueType()))
        .union((abstract ? eOperations : eAllOperations).collect(o|o.getUsedTypes()).flatten().select(t|t.isEnum() || t.isValueType()))
		.reject(t|t.isDataType())
		.reject(t|t.isStereotype())»
«ENDDEFINE»

«DEFINE SourceImportDefinitions FOR EClass»
    #include <stdexcept>
    
    «IF eAllOperations.exists(o|o.isQuery())-»
    #include "CollectionHelpers.hpp"
    «ENDIF-»
    
    «EXPAND SingleImportDefinition FOREACH eStructuralFeatures
		.collect(e|e.eType)
		.union((abstract ? eOperations : eAllOperations).collect(o|o.getUsedTypes()).flatten())
		.union(eAllStructuralFeatures.select(e|e.isConstructorInjectedProperty()).collect(e|e.eType).flatten())
		.toSet()
		.reject(t|t == this)
		.reject(t|t.isDataType())
		.reject(t|t.isEnum())
        .reject(t|t.isValueType())
		.reject(t|t.isBuiltInType())
		.reject(t|t.isStereotype())»
«ENDDEFINE»

«DEFINE ForwardDeclarations FOR EClass»
    «EXPAND SingleForwardDeclarationDefinition FOREACH eStructuralFeatures
		.collect(e|e.eType)
		.union((abstract ? eOperations : eAllOperations).collect(o|o.getUsedTypes()).flatten())
		.union(eAllStructuralFeatures.select(e|e.isConstructorInjectedProperty()).collect(e|e.eType).flatten())
		.toSet()
		.reject(t|t == this)
		.reject(t|t.isDataType())
		.reject(t|t.isEnum())
		.reject(t|t.isValueType())
		.reject(t|t.isBuiltInType())
		.reject(t|t.isStereotype())»
«ENDDEFINE»

«DEFINE SingleImportDefinition FOR EClassifier-»
    #include "«name».h"
«ENDDEFINE»

«DEFINE SingleForwardDeclarationDefinition FOR EClassifier-»
    namespace «ePackage.name» { class «name»; }
«ENDDEFINE»
