«IMPORT commandBehavior»
«IMPORT queryBehavior»

«EXTENSION template::cpp::GeneratorExtensions»

«DEFINE CommandParametersClassDefinition FOR Transformation»
        «EXPAND template::cpp::types::ImportUsedTypesTemplate::CommandParameterIncludeDefinitions FOR this»
        
        namespace «getCommandNamespace()» {
        
        struct «name.toFirstUpper()»CommandParameters final {
            «EXPAND ParameterFieldDefinitions FOR this»
            
            «name.toFirstUpper()»CommandParameters(«EXPAND ConstructorParameterDefinitions FOR this»)
            «EXPAND ConstructorParameterInitializationDefinitions("") FOR this-»
            {
            }
        };
        
        }
«ENDDEFINE»

«DEFINE ParameterFieldDefinitions FOR Transformation-»
    std::shared_ptr<«targetClass.ePackage.name»::«targetClass.getConcreteName()»> self;
    mpw::CommandStack& commandStack;
    «IF isActorCommand()-»
    mpw::GameLog& gameLog;
    «ENDIF-»
    «FOREACH mainUnit.parameters AS p»
    «p.toCppType()» «p.name»;
    «ENDFOREACH»
«ENDDEFINE»

«DEFINE ConstructorParameterDefinitions FOR Transformation-»
    std::shared_ptr<«targetClass.ePackage.name»::«targetClass.getConcreteName()»> self,
    mpw::CommandStack& commandStack «IF isActorCommand()-», mpw::GameLog& gameLog«ENDIF-»
    «FOREACH mainUnit.parameters AS p-»
    ,«p.toCppType()» «p.name-»
    «ENDFOREACH-»
«ENDDEFINE»

«DEFINE ConstructorParameterInitializationDefinitions(String rhsPrefix) FOR Transformation-»
    : self(«rhsPrefix»self)
    , commandStack(«rhsPrefix»commandStack)
    «IF isActorCommand()-»
    , gameLog(«rhsPrefix»gameLog)
    «ENDIF-»
    «FOREACH mainUnit.parameters AS p-»
    , «p.name»(«rhsPrefix»«p.name»)
    «ENDFOREACH-»
«ENDDEFINE»
