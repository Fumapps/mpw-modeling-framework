modeltype ecore uses ecore('http://www.eclipse.org/emf/2002/Ecore');

library EmfHelpers;

configuration property EntityModels: List(EPackage);

helper Element::root() : Element {
    var element := self;
    while (element.container() != null) {
    	element := element.container();
    };
    return element;
}

query findClassifierForName(name: String) : ecore::EClassifier {
    return EntityModels->collect(p|p.getEClassifier(name))
                       ->selectOne(c|c != null)
                        .oclAsType(ecore::EClass);
}

query findInstanceOfMetaClass(name: String) : ecore::EClassifier {
    return EntityModels->collect(p|p.eClassifiers[EClass])
                       ->flatten()
                       ->selectOne(c|c.eSuperTypes->exists(t|t.name = name));
}

query Bag(String)::joinToString(separator: String) : String {
	return self->asSequence()->joinToString(separator);
}

// note: found no built-in way to join a collection to string, so build a iterative workaround as query.
query Sequence(String)::joinToString(separator: String) : String {
	var str := "";
	var first = true;
	self->forEach(o) {
	  if (first = false) {
	  	str := str + separator;
	  };
	  str := str + o.toString();
	  first := false;		
	};
	return str;
}
