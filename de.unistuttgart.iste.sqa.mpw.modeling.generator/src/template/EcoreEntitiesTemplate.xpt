«IMPORT ecore»
«IMPORT generationAnnotations»

«EXTENSION template::GeneratorExtensions»

«DEFINE main FOR List[EPackage]»
    «EXPAND EcoreFile FOREACH this»
«ENDDEFINE»

«DEFINE EcoreFile FOR EPackage»
    «EXPAND JavaClass FOREACH this.eClassifiers.typeSelect(EClass).reject(c|c.interface)»
    «EXPAND JavaInterface FOREACH this.eClassifiers.typeSelect(EClass).select(c|c.interface)»
    «EXPAND JavaEnum FOREACH this.eClassifiers.typeSelect(EEnum)»
«ENDDEFINE»

«DEFINE JavaClass FOR EClass»
    «FILE "generated/" + this.ePackage.toJavaPackagePath() + "/" + name + ".java"»package «this.ePackage.toJavaPackageName()»;
    
    «EXPAND template::types::ImportUsedTypesTemplate::ImportDefinitions FOR this»
    
    public «IF needsImplSubclass() || abstract»abstract«ENDIF» class «this.name» «this.toInheritance()» {
      «EXPAND template::properties::PropertyTemplate::PropertyDefinitions FOR this»
      «EXPAND template::properties::PropertyTemplate::ConstructorDefinition FOR this»
      «EXPAND template::QueriesTemplate::QueryDefinitions FOR this»
      «EXPAND template::commands::CommandCallsTemplate::CommandDefinitions FOR this»
      «EXPAND template::properties::PropertyTemplate::GetPropertyDefinitions FOR this»
      «EXPAND template::properties::PropertyTemplate::GetPropertyValueDefinitions FOR this»
      «EXPAND template::properties::PropertyTemplate::SetPropertyValueDefinitions FOR this»
      «FOREACH eOperations AS o»
      public abstract «o.operationToSignature()»;
      «ENDFOREACH»
    }
    «ENDFILE»
    «IF needsImplSubclass()»
    «FILE "java/" + this.ePackage.toJavaPackagePath() + "/impl/" + name + "Impl.java"»package «this.ePackage.toJavaPackageName()».impl;
    
    «EXPAND template::types::ImportUsedTypesTemplate::ImplImportDefinitions FOR this»
    
    public class «this.name»Impl extends «this.name» {
      «EXPAND template::properties::PropertyTemplate::ImplConstructorDefinition FOR this»
      «FOREACH this.getManualImplementedOperations() AS o»
      @Override
      public «o.operationToSignature()» {
          throw new RuntimeException("not implemented");
      }
      «ENDFOREACH»
    }
    «ENDFILE»
    «ENDIF»
«ENDDEFINE»

«DEFINE JavaInterface FOR EClass»
    «FILE "generated/" + this.ePackage.toJavaPackagePath() + "/" + name + ".java"»package «this.ePackage.toJavaPackageName()»;
    
    «EXPAND template::types::ImportUsedTypesTemplate::ImportDefinitions FOR this»
    
    public interface «this.name» «toInheritance()» {
      «FOREACH eOperations AS o»
      «o.operationToSignature()»;
      «IF o.isPropertyGetter()-»
        «o.operationToObservableGetterSignature()»;
      «ENDIF-»
      «ENDFOREACH»
      «EXPAND GenerationAnnotation FOREACH eAnnotations»
    }
    «ENDFILE»
«ENDDEFINE»

«DEFINE JavaEnum FOR EEnum»
    «FILE "generated/" + this.ePackage.toJavaPackagePath() + "/" + name + ".java"»package «this.ePackage.toJavaPackageName()»;
    
    public enum «this.name» {
      «FOREACH eLiterals AS l SEPARATOR ", "»
      «l»
	  «ENDFOREACH»
    }
    «ENDFILE»
«ENDDEFINE»

«DEFINE GenerationAnnotation FOR EAnnotation»«ENDDEFINE»

«DEFINE GenerationAnnotation FOR GetPropertyDeclarationAnnotation»
    «fieldTypeName» «getterName»();
«ENDDEFINE»
