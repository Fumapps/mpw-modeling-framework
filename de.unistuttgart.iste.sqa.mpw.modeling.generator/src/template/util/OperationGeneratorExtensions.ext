import ecore;

extension util::Extensions reexport;
extension template::util::EmfGeneratorExtensions reexport;
extension template::util::GlobalsGeneratorExtensions;

operationToSignature(EOperation this) :
    let parameters = if (isCommand()) then toCommandParameterList() else eParameters.collect(e|e.eType.name.toJavaType() + " " + e.name).joinToString(", ") :
    operationToJavaType() + " " + effectiveOperationName() + "(" + parameters + ")";

private toCommandParameterList(EOperation this) :
    getCommandForOperation().mainUnit.parameters.collect(p|p.type.toJavaType() + " " + p.name).toString(", ");

private effectiveOperationName(EOperation this) : 
    if (isPropertyGetter()) then name.getter() else name;

hasPropertyGetterOperation(EStructuralFeature this) :
    let class = (EClass)eContainer :
    class.eAllSuperTypes.exists(t|t.eOperations.exists(o|o.isPropertyGetter() && o.name == name));
    
isPropertyGetter(EOperation this) : isMarkedWith("isPropertyGetter");
    
isCommand(EOperation this) : isMarkedWith("command");
    
isQuery(EOperation this) : isMarkedWith("query");

private isMarkedWith(EOperation this, String key) :
    eAnnotations.exists(a|a.source == key || a.details.exists(d|d.key == key));