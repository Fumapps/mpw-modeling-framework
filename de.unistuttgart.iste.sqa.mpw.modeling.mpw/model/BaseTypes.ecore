<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="basetypes" nsURI="http://www.mpw.uni-stuttgart.de/basetypes"
    nsPrefix="basetypes">
  <eClassifiers xsi:type="ecore:EDataType" name="Throwable" instanceClassName="java.lang.Throwable"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Semaphore" instanceClassName="java.util.concurrent.Semaphore"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceTypeName="objectType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a base type of any value. In java this is simply the type `java.lang.Object`. In C++ this may be an union of possible values: it can be a primitive value like integers, booleans or strings. Alternatively it can be a reference/pointer."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Entity" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base class of an entity which defines property modifications used by commands. It makes use of the generic type Object to provide a reflection-like possibility to set values by property-names.&#xD;&#xA;&#xD;&#xA;Note: In Java it can be simply realized by reflection, but in languages like C++ a reflection-like modification access-layer will be generated."/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
