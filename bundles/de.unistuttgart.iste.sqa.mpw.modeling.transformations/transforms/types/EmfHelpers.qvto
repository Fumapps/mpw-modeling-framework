modeltype ecore uses ecore('http://www.eclipse.org/emf/2002/Ecore');

/**
  *  Library with some convinience utilities in context of Ecore types.
  *
  *  It additionally gets the modeled ecore-files injected as a configuration property to allow to
  *  find the custom types by their names.
  */
library EmfHelpers;

configuration property EntityModels: List(EPackage);

query String::getter() : String {
    return "get" + self.firstToUpper();
}

query String::setter() : String {
    return "set" + self.firstToUpper();
}

query Element::root() : Element {
    var element := self;
    while (element.container() != null) {
        element := element.container();
    };
    return element;
}

query findClassForName(name: String) : ecore::EClass {
    return findClassifierForName(name).oclAsType(ecore::EClass);
}

query findClassifierForName(name: String) : ecore::EClassifier {
    switch {
        case(name = "EInt") return EInt.oclAsType(EClassifier);
    };
    return EntityModels->collect(p|p.getEClassifier(name))
                       ->selectOne(c|c != null);
}

query findInstanceOfMetaClass(name: String) : ecore::EClassifier {
    return EntityModels->collect(p|p.eClassifiers[EClass])
                       ->flatten()
                       ->selectOne(c|c.isInstanceOf(name));
}

query EClassifier::isInstanceOf(name: String) : Boolean {
    return self.oclIsTypeOf(EClass) and self.oclAsType(EClass).eAllSuperTypes->exists(t|t.name = name);
}
