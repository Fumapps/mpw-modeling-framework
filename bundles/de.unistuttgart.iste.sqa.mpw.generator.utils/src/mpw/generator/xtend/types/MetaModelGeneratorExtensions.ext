import ecore;

extension mpw::generator::xtend::operations::OperationGeneratorExtensions;
extension mpw::generator::xtend::util::GlobalsGeneratorExtensions;
extension mpw::generator::xtend::BasicLanguageExtensions;

/*
 * Extensions related to the MPW Metamodel types (General).
 */

isStereotype(EClassifier this) :
    this.isInStereotypePackage();
    
private isInStereotypePackage(EClassifier this) :
    ePackage.nsPrefix == "viewmodelstereotypes" || ePackage.nsPrefix == "stereotypes";

hasStereotype(EClassifier this, String stereotype) :
    let eClass = (EClass)this :
    EClass.isInstance(this) && eClass.eAllSuperTypes.exists(t|t.isStereotype() && t.name == stereotype);

needsImplSubclass(EClassifier this) :
    let eClass = (EClass)this :
    EClass.isInstance(this) && !isFacade() && eClass.getManualImplementedOperations().size > 0 && !eClass.abstract;

getManualImplementedOperations(EClass this) :
    eAllOperations.reject(o|o.isGenerated());

private isGenerated(EOperation this) :
    isCommand() || isQuery() || isPropertyGetter() || hasGenerationAnnotations();

EClass getBaseClass(EClass this) :
    let filteredSuperTypes = eSuperTypes.reject(e|e.interface) :
    if (filteredSuperTypes.size > 0) then filteredSuperTypes.first()
    else null;

isValueType(EClassifier this) : hasStereotype("ValueType");
isDependency(EClassifier this) : hasStereotype("Dependency");
isFacade(EClassifier this) : eAnnotations.exists(a|a.source == "facade");
isSemaphore(EClassifier this) : name == "Semaphore";
isInheritedEntity(EClassifier this) : EClass.isInstance(this) && ((EClass)this).eAllSuperTypes.exists(t|t.name == "Entity");
isViewModelType(EClassifier this) :
    EClass.isInstance(this) && ((EClass)this).eSuperTypes.exists(t|t.name == "ViewModel");
