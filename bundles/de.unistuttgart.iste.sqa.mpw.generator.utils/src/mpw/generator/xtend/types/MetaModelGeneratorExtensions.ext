import ecore;

extension mpw::generator::xtend::operations::OperationGeneratorExtensions;
extension mpw::generator::xtend::util::GlobalsGeneratorExtensions;
extension mpw::generator::xtend::BasicLanguageExtensions;

/*
 * Extensions related to the MPW Metamodel types (General).
 */

isStereotype(EClassifier this) :
    this.isInStereotypePackage();
    
private isInStereotypePackage(EClassifier this) :
    ePackage.nsPrefix == "viewmodelstereotypes" || ePackage.nsPrefix == "stereotypes";

hasStereotype(EClassifier this, String stereotype) :
    let eClass = (EClass)this :
    EClass.isInstance(this) && eClass.eAllSuperTypes.exists(t|t.isStereotype() && t.name == stereotype);

needsImplSubclass(EClassifier this) :
    let eClass = (EClass)this :
    EClass.isInstance(this) && !isFacade() && eClass.getManualImplementedOperations().size > 0 && !eClass.abstract;

getManualImplementedOperations(EClass this) :
    eAllOperations.reject(o|o.isGenerated());

private isGenerated(EOperation this) :
    isCommand() || isQuery() || isPropertyGetter() || hasGenerationAnnotations();

EClass getBaseClass(EClass this) :
    let filteredSuperTypes = eSuperTypes.reject(e|e.interface) :
    if (filteredSuperTypes.size > 0) then filteredSuperTypes.first()
    else null;

isValueType(EClassifier this) : hasStereotype("ValueType");
isDependency(EClassifier this) : hasStereotype("Dependency");
isFacade(EClassifier this) : eAnnotations.exists(a|a.source == "facade");
isSemaphore(EClassifier this) : name == "Semaphore";
isInheritedEntity(EClassifier this) : EClass.isInstance(this) && ((EClass)this).eAllSuperTypes.exists(t|t.name == "Entity");
isInheritedMpw(EClassifier this) : EClass.isInstance(this) && ((EClass)this).eAllSuperTypes.exists(t|t.name == "MiniProgrammingWorld");
isViewModelType(EClassifier this) :
    EClass.isInstance(this) && ((EClass)this).eSuperTypes.exists(t|t.name == "ViewModel");
    
isMpwFrameworkType(EClassifier this) :
    ePackage.nsURI == "http://www.mpw.uni-stuttgart.de/basetypes" ||
    ePackage.nsURI == "http://www.mpw.uni-stuttgart.de/commands" ||
    ePackage.nsURI == "http://www.mpw.uni-stuttgart.de/mpw" ||
    ePackage.nsURI == "http://www.mpw.uni-stuttgart.de/viewmodel";

/*
 * Determines the sub-package for a generated class.
 * Facade types -> "facade"
 * ValueTypes/Enums -> "datatypes"
 * View-Model types -> "viewmodel"
 * else -> ""
 */
toSubPackageName(EClassifier this) :
    if (EEnum.isInstance(this) || this.isValueType()) then "datatypes"
    else if (isFacade() || name == "MiniProgrammingWorld" || isInheritedMpw()) then "facade" // note: MiniProgrammingWorld is needed in concrete facade sub-classes as a baseclass, hence it has to be included in facade folder
    else if (isViewModelType()) then "viewmodel"
    else this.ePackage.name;
    