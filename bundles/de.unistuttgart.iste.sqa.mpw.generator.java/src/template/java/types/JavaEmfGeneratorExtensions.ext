import ecore;
import generationAnnotations;

extension mpw::generator::xtend::types::EmfGeneratorExtensions reexport;

extension template::java::operations::JavaOperationGeneratorExtensions;
extension template::java::properties::JavaPropertyGeneratorExtensions;
extension template::java::types::JavaMetaModelGeneratorExtensions;

/*
 * Extensions related to EMF Metamodel types (Java).
 */

modifierVisibility(EStructuralFeature this) :
    if (derived) then "protected" else "public";
    
toJavaType(String this) :
	if (this == "EInt") then "int"
	else if (this == "EBoolean") then "boolean"
	else if (this == "EDouble") then "double"
	else if (this == "EString") then "String"
	else if (this == "EObject") then "Object"
	else this;
	
featureToSingleJavaType(EStructuralFeature this) : this.eType.name.toJavaType();
featureToJavaType(EStructuralFeature this) : elementToJavaType();
operationToJavaType(EOperation this) : elementToJavaType();
	
private elementToJavaType(ETypedElement this) :
    if (isMarkedWithAnnotation("constructor")) then "" 
    else if (this.eType == null) then "void" 
	else if (this.upperBound == -1) then "List<" + this.eType.name.toJavaType() + ">"
	else this.eType.name.toJavaType();

featureToFieldInstantiation(EStructuralFeature this) :
    if (hasInitializationAnnotation()) then "ERROR: featureToFieldInstantiation() must not be called for InlineSimpleFieldInitializationAnnotation"
	else if (this.upperBound == -1) then "new ArrayList<>()"
	else if (this.eType.isDependency()) then "new " + this.eType.toJavaPackageName() + ".impl.Dummy" + this.eType.name + "()"
	else if (this.eType.needsImplSubclass()) then "new " + this.eType.toJavaPackageName() + ".impl." + this.eType.name + "Impl()"
	else "new " + this.eType.name.toUnboxedJavaTypeName() + "()";
	
toUnboxedJavaTypeName(String this) :
	if (this == "EInt") then "Integer"
	else if (this == "EBoolean") then "Boolean"
	else if (this == "EDouble") then "Double"
	else if (this == "EString") then "String"
	else if (this == "EObject") then "Object"
	else this;
	
defaultValueOf(EStructuralFeature f) :
    if (f.defaultValueLiteral != null && f.eType.isEnum()) then f.eType.name + "." + f.defaultValueLiteral
    else if (f.defaultValueLiteral != null) then f.defaultValueLiteral
    else if (f.eType.name == "EInt") then "0"
	else if (f.eType.name == "EBoolean") then "false"
	else if (f.eType.name == "EDouble") then "0.0"
	else null;
    
toJavaDoc(String this) :
    if (length > 0) then 
        "/**\n * " + this.replaceAll("\n", "\n * ") + "\n*/\n"
    else "";
    
toComment(String this) :
    if (length > 0) then 
        "/*\n * " + this.replaceAll("\n", "\n * ") + "\n*/\n"
    else "";
