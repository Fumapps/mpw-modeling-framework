/*
 * generated by Xtext 2.23.0
 */
grammar InternalQueryDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.unistuttgart.iste.sqa.mpw.modeling.querydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.unistuttgart.iste.sqa.mpw.modeling.querydsl.services.QueryDslGrammarAccess;

}
@parser::members {
	private QueryDslGrammarAccess grammarAccess;

	public void setGrammarAccess(QueryDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getContextParserRuleCall()); }
		ruleContext
		{ after(grammarAccess.getModelAccess().getContextParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContext
entryRuleContext
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextAccess().getAlternatives()); }
		(rule__Context__Alternatives)
		{ after(grammarAccess.getContextAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassContext
entryRuleClassContext
:
{ before(grammarAccess.getClassContextRule()); }
	 ruleClassContext
{ after(grammarAccess.getClassContextRule()); } 
	 EOF 
;

// Rule ClassContext
ruleClassContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassContextAccess().getGroup()); }
		(rule__ClassContext__Group__0)
		{ after(grammarAccess.getClassContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandContext
entryRuleCommandContext
:
{ before(grammarAccess.getCommandContextRule()); }
	 ruleCommandContext
{ after(grammarAccess.getCommandContextRule()); } 
	 EOF 
;

// Rule CommandContext
ruleCommandContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandContextAccess().getGroup()); }
		(rule__CommandContext__Group__0)
		{ after(grammarAccess.getCommandContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandConstraint
entryRuleCommandConstraint
:
{ before(grammarAccess.getCommandConstraintRule()); }
	 ruleCommandConstraint
{ after(grammarAccess.getCommandConstraintRule()); } 
	 EOF 
;

// Rule CommandConstraint
ruleCommandConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandConstraintAccess().getAlternatives()); }
		(rule__CommandConstraint__Alternatives)
		{ after(grammarAccess.getCommandConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrecondition
entryRulePrecondition
:
{ before(grammarAccess.getPreconditionRule()); }
	 rulePrecondition
{ after(grammarAccess.getPreconditionRule()); } 
	 EOF 
;

// Rule Precondition
rulePrecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreconditionAccess().getGroup()); }
		(rule__Precondition__Group__0)
		{ after(grammarAccess.getPreconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostcondition
entryRulePostcondition
:
{ before(grammarAccess.getPostconditionRule()); }
	 rulePostcondition
{ after(grammarAccess.getPostconditionRule()); } 
	 EOF 
;

// Rule Postcondition
rulePostcondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostconditionAccess().getGroup()); }
		(rule__Postcondition__Group__0)
		{ after(grammarAccess.getPostconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getImpliesExpressionParserRuleCall()); }
		ruleImpliesExpression
		{ after(grammarAccess.getExpressionAccess().getImpliesExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression
:
{ before(grammarAccess.getImpliesExpressionRule()); }
	 ruleImpliesExpression
{ after(grammarAccess.getImpliesExpressionRule()); } 
	 EOF 
;

// Rule ImpliesExpression
ruleImpliesExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getGroup()); }
		(rule__ImpliesExpression__Group__0)
		{ after(grammarAccess.getImpliesExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinusExpression
entryRulePlusOrMinusExpression
:
{ before(grammarAccess.getPlusOrMinusExpressionRule()); }
	 rulePlusOrMinusExpression
{ after(grammarAccess.getPlusOrMinusExpressionRule()); } 
	 EOF 
;

// Rule PlusOrMinusExpression
rulePlusOrMinusExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup()); }
		(rule__PlusOrMinusExpression__Group__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationOrDivisionExpression
entryRuleMultiplicationOrDivisionExpression
:
{ before(grammarAccess.getMultiplicationOrDivisionExpressionRule()); }
	 ruleMultiplicationOrDivisionExpression
{ after(grammarAccess.getMultiplicationOrDivisionExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationOrDivisionExpression
ruleMultiplicationOrDivisionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup()); }
		(rule__MultiplicationOrDivisionExpression__Group__0)
		{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOldValueExpression
entryRuleOldValueExpression
:
{ before(grammarAccess.getOldValueExpressionRule()); }
	 ruleOldValueExpression
{ after(grammarAccess.getOldValueExpressionRule()); } 
	 EOF 
;

// Rule OldValueExpression
ruleOldValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOldValueExpressionAccess().getGroup()); }
		(rule__OldValueExpression__Group__0)
		{ after(grammarAccess.getOldValueExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyPathExpression
entryRulePropertyPathExpression
:
{ before(grammarAccess.getPropertyPathExpressionRule()); }
	 rulePropertyPathExpression
{ after(grammarAccess.getPropertyPathExpressionRule()); } 
	 EOF 
;

// Rule PropertyPathExpression
rulePropertyPathExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyPathExpressionAccess().getGroup()); }
		(rule__PropertyPathExpression__Group__0)
		{ after(grammarAccess.getPropertyPathExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNavigatedStatement
entryRuleNavigatedStatement
:
{ before(grammarAccess.getNavigatedStatementRule()); }
	 ruleNavigatedStatement
{ after(grammarAccess.getNavigatedStatementRule()); } 
	 EOF 
;

// Rule NavigatedStatement
ruleNavigatedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getAlternatives()); }
		(rule__NavigatedStatement__Alternatives)
		{ after(grammarAccess.getNavigatedStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodCall
entryRuleMethodCall
:
{ before(grammarAccess.getMethodCallRule()); }
	 ruleMethodCall
{ after(grammarAccess.getMethodCallRule()); } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodCallAccess().getGroup()); }
		(rule__MethodCall__Group__0)
		{ after(grammarAccess.getMethodCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionMethod
entryRuleCollectionMethod
:
{ before(grammarAccess.getCollectionMethodRule()); }
	 ruleCollectionMethod
{ after(grammarAccess.getCollectionMethodRule()); } 
	 EOF 
;

// Rule CollectionMethod
ruleCollectionMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionMethodAccess().getAlternatives()); }
		(rule__CollectionMethod__Alternatives)
		{ after(grammarAccess.getCollectionMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleCollectionMethod
entryRuleSimpleCollectionMethod
:
{ before(grammarAccess.getSimpleCollectionMethodRule()); }
	 ruleSimpleCollectionMethod
{ after(grammarAccess.getSimpleCollectionMethodRule()); } 
	 EOF 
;

// Rule SimpleCollectionMethod
ruleSimpleCollectionMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleCollectionMethodAccess().getGroup()); }
		(rule__SimpleCollectionMethod__Group__0)
		{ after(grammarAccess.getSimpleCollectionMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametrizedCollectionMethod
entryRuleParametrizedCollectionMethod
:
{ before(grammarAccess.getParametrizedCollectionMethodRule()); }
	 ruleParametrizedCollectionMethod
{ after(grammarAccess.getParametrizedCollectionMethodRule()); } 
	 EOF 
;

// Rule ParametrizedCollectionMethod
ruleParametrizedCollectionMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametrizedCollectionMethodAccess().getAlternatives()); }
		(rule__ParametrizedCollectionMethod__Alternatives)
		{ after(grammarAccess.getParametrizedCollectionMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirection
entryRuleDirection
:
{ before(grammarAccess.getDirectionRule()); }
	 ruleDirection
{ after(grammarAccess.getDirectionRule()); } 
	 EOF 
;

// Rule Direction
ruleDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
		(rule__Direction__Alternatives)
		{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getClassContextParserRuleCall_0()); }
		ruleClassContext
		{ after(grammarAccess.getContextAccess().getClassContextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContextAccess().getCommandContextParserRuleCall_1()); }
		ruleCommandContext
		{ after(grammarAccess.getContextAccess().getCommandContextParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getQueryParserRuleCall_0()); }
		ruleQuery
		{ after(grammarAccess.getElementAccess().getQueryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getCommandConstraintParserRuleCall_1()); }
		ruleCommandConstraint
		{ after(grammarAccess.getElementAccess().getCommandConstraintParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInvariantParserRuleCall_2()); }
		ruleInvariant
		{ after(grammarAccess.getElementAccess().getInvariantParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandConstraintAccess().getPreconditionParserRuleCall_0()); }
		rulePrecondition
		{ after(grammarAccess.getCommandConstraintAccess().getPreconditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandConstraintAccess().getPostconditionParserRuleCall_1()); }
		rulePostcondition
		{ after(grammarAccess.getCommandConstraintAccess().getPostconditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperationEqualsSignKeyword_1_1_0_0()); }
		'='
		{ after(grammarAccess.getEqualityExpressionAccess().getOperationEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperationLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
		'<>'
		{ after(grammarAccess.getEqualityExpressionAccess().getOperationLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinusExpression__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinusExpression__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1_0_0()); }
		(rule__MultiplicationOrDivisionExpression__Group_1_0_0__0)
		{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1_0_1()); }
		(rule__MultiplicationOrDivisionExpression__Group_1_0_1__0)
		{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getPropertyPathExpressionParserRuleCall_2()); }
		rulePropertyPathExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getPropertyPathExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOldValueExpressionParserRuleCall_3()); }
		ruleOldValueExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getOldValueExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstantExpressionParserRuleCall_4()); }
		ruleConstantExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstantExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
		(rule__ConstantExpression__Group_0__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
		(rule__ConstantExpression__Group_1__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
		(rule__ConstantExpression__Group_2__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_3()); }
		(rule__ConstantExpression__Group_3__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueTrueKeyword_2_1_0_0()); }
		'true'
		{ after(grammarAccess.getConstantExpressionAccess().getValueTrueKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueFalseKeyword_2_1_0_1()); }
		'false'
		{ after(grammarAccess.getConstantExpressionAccess().getValueFalseKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTargetAssignment_0()); }
		(rule__Statement__TargetAssignment_0)
		{ after(grammarAccess.getStatementAccess().getTargetAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTargetAssignment_1()); }
		(rule__Statement__TargetAssignment_1)
		{ after(grammarAccess.getStatementAccess().getTargetAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTargetAssignment_2()); }
		(rule__Statement__TargetAssignment_2)
		{ after(grammarAccess.getStatementAccess().getTargetAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getGroup_0()); }
		(rule__NavigatedStatement__Group_0__0)
		{ after(grammarAccess.getNavigatedStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getGroup_1()); }
		(rule__NavigatedStatement__Group_1__0)
		{ after(grammarAccess.getNavigatedStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getGroup_2()); }
		(rule__NavigatedStatement__Group_2__0)
		{ after(grammarAccess.getNavigatedStatementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getGroup_1_0()); }
		(rule__MethodCall__Group_1_0__0)
		{ after(grammarAccess.getMethodCallAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }
		'()'
		{ after(grammarAccess.getMethodCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionMethod__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionMethodAccess().getSimpleCollectionMethodParserRuleCall_0()); }
		ruleSimpleCollectionMethod
		{ after(grammarAccess.getCollectionMethodAccess().getSimpleCollectionMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionMethodAccess().getParametrizedCollectionMethodParserRuleCall_1()); }
		ruleParametrizedCollectionMethod
		{ after(grammarAccess.getCollectionMethodAccess().getParametrizedCollectionMethodParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCollectionMethod__MethodAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleCollectionMethodAccess().getMethodNotEmptyKeyword_0_0_0()); }
		'notEmpty'
		{ after(grammarAccess.getSimpleCollectionMethodAccess().getMethodNotEmptyKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleCollectionMethodAccess().getMethodIsEmptyKeyword_0_0_1()); }
		'isEmpty'
		{ after(grammarAccess.getSimpleCollectionMethodAccess().getMethodIsEmptyKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleCollectionMethodAccess().getMethodSizeKeyword_0_0_2()); }
		'size'
		{ after(grammarAccess.getSimpleCollectionMethodAccess().getMethodSizeKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametrizedCollectionMethodAccess().getGroup_0()); }
		(rule__ParametrizedCollectionMethod__Group_0__0)
		{ after(grammarAccess.getParametrizedCollectionMethodAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParametrizedCollectionMethodAccess().getGroup_1()); }
		(rule__ParametrizedCollectionMethod__Group_1__0)
		{ after(grammarAccess.getParametrizedCollectionMethodAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getEASTKeyword_0()); }
		'EAST'
		{ after(grammarAccess.getDirectionAccess().getEASTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getWESTKeyword_1()); }
		'WEST'
		{ after(grammarAccess.getDirectionAccess().getWESTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getSOUTHKeyword_2()); }
		'SOUTH'
		{ after(grammarAccess.getDirectionAccess().getSOUTHKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getNORTHKeyword_3()); }
		'NORTH'
		{ after(grammarAccess.getDirectionAccess().getNORTHKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassContext__Group__0__Impl
	rule__ClassContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassContextAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getClassContextAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassContext__Group__1__Impl
	rule__ClassContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassContextAccess().getClassNameAssignment_1()); }
	(rule__ClassContext__ClassNameAssignment_1)
	{ after(grammarAccess.getClassContextAccess().getClassNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassContext__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getClassContextAccess().getElementsAssignment_2()); }
		(rule__ClassContext__ElementsAssignment_2)
		{ after(grammarAccess.getClassContextAccess().getElementsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getClassContextAccess().getElementsAssignment_2()); }
		(rule__ClassContext__ElementsAssignment_2)*
		{ after(grammarAccess.getClassContextAccess().getElementsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__0__Impl
	rule__CommandContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getCommandContextAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__1__Impl
	rule__CommandContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getClassNameAssignment_1()); }
	(rule__CommandContext__ClassNameAssignment_1)
	{ after(grammarAccess.getCommandContextAccess().getClassNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__2__Impl
	rule__CommandContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getCommandContextAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__3__Impl
	rule__CommandContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getCommandNameAssignment_3()); }
	(rule__CommandContext__CommandNameAssignment_3)
	{ after(grammarAccess.getCommandContextAccess().getCommandNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__4__Impl
	rule__CommandContext__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getGroup_4()); }
	(rule__CommandContext__Group_4__0)?
	{ after(grammarAccess.getCommandContextAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCommandContextAccess().getElementsAssignment_5()); }
		(rule__CommandContext__ElementsAssignment_5)
		{ after(grammarAccess.getCommandContextAccess().getElementsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCommandContextAccess().getElementsAssignment_5()); }
		(rule__CommandContext__ElementsAssignment_5)*
		{ after(grammarAccess.getCommandContextAccess().getElementsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandContext__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group_4__0__Impl
	rule__CommandContext__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getCommandContextAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group_4__1__Impl
	rule__CommandContext__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getParameterListAssignment_4_1()); }
	(rule__CommandContext__ParameterListAssignment_4_1)
	{ after(grammarAccess.getCommandContextAccess().getParameterListAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandContext__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandContextAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getCommandContextAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getDocumentationAssignment_0()); }
	(rule__Query__DocumentationAssignment_0)?
	{ after(grammarAccess.getQueryAccess().getDocumentationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getInternalAssignment_1()); }
	(rule__Query__InternalAssignment_1)?
	{ after(grammarAccess.getQueryAccess().getInternalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQueryKeyword_2()); }
	'query'
	{ after(grammarAccess.getQueryAccess().getQueryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_3()); }
	(rule__Query__NameAssignment_3)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
	rule__Query__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getGroup_4()); }
	(rule__Query__Group_4__0)?
	{ after(grammarAccess.getQueryAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__5__Impl
	rule__Query__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getQueryAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getGroup_6()); }
	(rule__Query__Group_6__0)
	{ after(grammarAccess.getQueryAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group_4__0__Impl
	rule__Query__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group_4__1__Impl
	rule__Query__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getParameterListAssignment_4_1()); }
	(rule__Query__ParameterListAssignment_4_1)
	{ after(grammarAccess.getQueryAccess().getParameterListAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getQueryAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group_6__0__Impl
	rule__Query__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getExpressionsAssignment_6_0()); }
	(rule__Query__ExpressionsAssignment_6_0)
	{ after(grammarAccess.getQueryAccess().getExpressionsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getSemicolonKeyword_6_1()); }
	';'
	{ after(grammarAccess.getQueryAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__0__Impl
	rule__Precondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getDocumentationAssignment_0()); }
	(rule__Precondition__DocumentationAssignment_0)?
	{ after(grammarAccess.getPreconditionAccess().getDocumentationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__1__Impl
	rule__Precondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getPreconditionKeyword_1()); }
	'precondition'
	{ after(grammarAccess.getPreconditionAccess().getPreconditionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__2__Impl
	rule__Precondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getNameAssignment_2()); }
	(rule__Precondition__NameAssignment_2)?
	{ after(grammarAccess.getPreconditionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__3__Impl
	rule__Precondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPreconditionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getGroup_4()); }
	(rule__Precondition__Group_4__0)
	{ after(grammarAccess.getPreconditionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group_4__0__Impl
	rule__Precondition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getExpressionsAssignment_4_0()); }
	(rule__Precondition__ExpressionsAssignment_4_0)
	{ after(grammarAccess.getPreconditionAccess().getExpressionsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getPreconditionAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__0__Impl
	rule__Postcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getDocumentationAssignment_0()); }
	(rule__Postcondition__DocumentationAssignment_0)?
	{ after(grammarAccess.getPostconditionAccess().getDocumentationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__1__Impl
	rule__Postcondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getPostconditionKeyword_1()); }
	'postcondition'
	{ after(grammarAccess.getPostconditionAccess().getPostconditionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__2__Impl
	rule__Postcondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getNameAssignment_2()); }
	(rule__Postcondition__NameAssignment_2)?
	{ after(grammarAccess.getPostconditionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__3__Impl
	rule__Postcondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPostconditionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getGroup_4()); }
	(rule__Postcondition__Group_4__0)
	{ after(grammarAccess.getPostconditionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group_4__0__Impl
	rule__Postcondition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getExpressionsAssignment_4_0()); }
	(rule__Postcondition__ExpressionsAssignment_4_0)
	{ after(grammarAccess.getPostconditionAccess().getExpressionsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getPostconditionAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_0()); }
	(rule__ParameterList__ParametersAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); }
	(rule__ParameterList__ParametersAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getVariableNameAssignment_0()); }
	(rule__Parameter__VariableNameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getVariableNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeNameAssignment_2()); }
	(rule__Parameter__TypeNameAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getDocumentationAssignment_0()); }
	(rule__Invariant__DocumentationAssignment_0)?
	{ after(grammarAccess.getInvariantAccess().getDocumentationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantKeyword_1()); }
	'invariant'
	{ after(grammarAccess.getInvariantAccess().getInvariantKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
	rule__Invariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getNameAssignment_2()); }
	(rule__Invariant__NameAssignment_2)?
	{ after(grammarAccess.getInvariantAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__3__Impl
	rule__Invariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getInvariantAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getGroup_4()); }
	(rule__Invariant__Group_4__0)
	{ after(grammarAccess.getInvariantAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group_4__0__Impl
	rule__Invariant__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getExpressionsAssignment_4_0()); }
	(rule__Invariant__ExpressionsAssignment_4_0)
	{ after(grammarAccess.getInvariantAccess().getExpressionsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getInvariantAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__0__Impl
	rule__ImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
	(rule__ImpliesExpression__Group_1__0)*
	{ after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__0__Impl
	rule__ImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getImpliesExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImpliesExpressionAccess().getImpliesExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__1__Impl
	rule__ImpliesExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_1()); }
	'implies'
	{ after(grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
	(rule__ImpliesExpression__RightAssignment_1_2)
	{ after(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
	ruleComparisonExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperationAssignment_1_1()); }
	(rule__EqualityExpression__OperationAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getPlusOrMinusExpressionParserRuleCall_0()); }
	rulePlusOrMinusExpression
	{ after(grammarAccess.getComparisonExpressionAccess().getPlusOrMinusExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
	(rule__ComparisonExpression__Group_1__0)*
	{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__0__Impl
	rule__ComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__1__Impl
	rule__ComparisonExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1_1()); }
	(rule__ComparisonExpression__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1_2()); }
	(rule__ComparisonExpression__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group__0__Impl
	rule__PlusOrMinusExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getMultiplicationOrDivisionExpressionParserRuleCall_0()); }
	ruleMultiplicationOrDivisionExpression
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getMultiplicationOrDivisionExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1()); }
	(rule__PlusOrMinusExpression__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1__0__Impl
	rule__PlusOrMinusExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinusExpression__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinusExpression__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_0__0__Impl
	rule__PlusOrMinusExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getPlusExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getPlusExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_1__0__Impl
	rule__PlusOrMinusExpression__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getMinusExpressionLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getMinusExpressionLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOrDivisionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group__0__Impl
	rule__MultiplicationOrDivisionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1()); }
	(rule__MultiplicationOrDivisionExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOrDivisionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1__0__Impl
	rule__MultiplicationOrDivisionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getAlternatives_1_0()); }
	(rule__MultiplicationOrDivisionExpression__Alternatives_1_0)
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicationOrDivisionExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOrDivisionExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1_0_0__0__Impl
	rule__MultiplicationOrDivisionExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOrDivisionExpression__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1_0_1__0__Impl
	rule__MultiplicationOrDivisionExpression__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationOrDivisionExpression__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNotExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getNotExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryExpressionAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_2()); }
	(rule__PrimaryExpression__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__0__Impl
	rule__ConstantExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
	(rule__ConstantExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__0__Impl
	rule__ConstantExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
	(rule__ConstantExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__0__Impl
	rule__ConstantExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getBoolConstantAction_2_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getBoolConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
	(rule__ConstantExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_3__0__Impl
	rule__ConstantExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getNullConstantAction_3_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getNullConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_3_1()); }
	(rule__ConstantExpression__ValueAssignment_3_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OldValueExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OldValueExpression__Group__0__Impl
	rule__OldValueExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOldValueExpressionAccess().getOldValueExpressionAction_0()); }
	()
	{ after(grammarAccess.getOldValueExpressionAccess().getOldValueExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OldValueExpression__Group__1__Impl
	rule__OldValueExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOldValueExpressionAccess().getOldKeyword_1()); }
	'old'
	{ after(grammarAccess.getOldValueExpressionAccess().getOldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OldValueExpression__Group__2__Impl
	rule__OldValueExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOldValueExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getOldValueExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OldValueExpression__Group__3__Impl
	rule__OldValueExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOldValueExpressionAccess().getExpressionAssignment_3()); }
	(rule__OldValueExpression__ExpressionAssignment_3)
	{ after(grammarAccess.getOldValueExpressionAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OldValueExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOldValueExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOldValueExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyPathExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPathExpression__Group__0__Impl
	rule__PropertyPathExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPathExpressionAccess().getStatementsExpressionAction_0()); }
	()
	{ after(grammarAccess.getPropertyPathExpressionAccess().getStatementsExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPathExpression__Group__1__Impl
	rule__PropertyPathExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPathExpressionAccess().getStatementsAssignment_1()); }
	(rule__PropertyPathExpression__StatementsAssignment_1)
	{ after(grammarAccess.getPropertyPathExpressionAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPathExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPathExpressionAccess().getStatementsAssignment_2()); }
	(rule__PropertyPathExpression__StatementsAssignment_2)*
	{ after(grammarAccess.getPropertyPathExpressionAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigatedStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_0__0__Impl
	rule__NavigatedStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_0_0()); }
	'.'
	{ after(grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getMethodCallAssignment_0_1()); }
	(rule__NavigatedStatement__MethodCallAssignment_0_1)
	{ after(grammarAccess.getNavigatedStatementAccess().getMethodCallAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigatedStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_1__0__Impl
	rule__NavigatedStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getNavigatedStatementAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getTargetAssignment_1_1()); }
	(rule__NavigatedStatement__TargetAssignment_1_1)
	{ after(grammarAccess.getNavigatedStatementAccess().getTargetAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigatedStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_2__0__Impl
	rule__NavigatedStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
	'->'
	{ after(grammarAccess.getNavigatedStatementAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigatedStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigatedStatementAccess().getCollectionTargetAssignment_2_1()); }
	(rule__NavigatedStatement__CollectionTargetAssignment_2_1)
	{ after(grammarAccess.getNavigatedStatementAccess().getCollectionTargetAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__0__Impl
	rule__MethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getTargetMethodAssignment_0()); }
	(rule__MethodCall__TargetMethodAssignment_0)
	{ after(grammarAccess.getMethodCallAccess().getTargetMethodAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getAlternatives_1()); }
	(rule__MethodCall__Alternatives_1)
	{ after(grammarAccess.getMethodCallAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_1_0__0__Impl
	rule__MethodCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1_0_0()); }
	'('
	{ after(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_1_0__1__Impl
	rule__MethodCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_0_1()); }
	(rule__MethodCall__ParametersAssignment_1_0_1)*
	{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_0_2()); }
	')'
	{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleCollectionMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleCollectionMethod__Group__0__Impl
	rule__SimpleCollectionMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCollectionMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleCollectionMethodAccess().getMethodAssignment_0()); }
	(rule__SimpleCollectionMethod__MethodAssignment_0)
	{ after(grammarAccess.getSimpleCollectionMethodAccess().getMethodAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCollectionMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleCollectionMethod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCollectionMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleCollectionMethodAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
	'()'
	{ after(grammarAccess.getSimpleCollectionMethodAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametrizedCollectionMethod__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_0__0__Impl
	rule__ParametrizedCollectionMethod__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectKeyword_0_0()); }
	'typeSelect('
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_0__1__Impl
	rule__ParametrizedCollectionMethod__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectAssignment_0_1()); }
	(rule__ParametrizedCollectionMethod__TypeSelectAssignment_0_1)
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametrizedCollectionMethod__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_1__0__Impl
	rule__ParametrizedCollectionMethod__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getAtKeyword_1_0()); }
	'at('
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getAtKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_1__1__Impl
	rule__ParametrizedCollectionMethod__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getIndexExpressionAssignment_1_1()); }
	(rule__ParametrizedCollectionMethod__IndexExpressionAssignment_1_1)
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getIndexExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametrizedCollectionMethod__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getParametrizedCollectionMethodAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassContext__ClassNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassContextAccess().getClassNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassContextAccess().getClassNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContext__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassContextAccess().getElementsElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getClassContextAccess().getElementsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__ClassNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandContextAccess().getClassNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandContextAccess().getClassNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__CommandNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandContextAccess().getCommandNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandContextAccess().getCommandNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__ParameterListAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandContextAccess().getParameterListParameterListParserRuleCall_4_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getCommandContextAccess().getParameterListParameterListParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandContext__ElementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandContextAccess().getElementsElementParserRuleCall_5_0()); }
		ruleElement
		{ after(grammarAccess.getCommandContextAccess().getElementsElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__DocumentationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
		RULE_DOCUMENTATION
		{ after(grammarAccess.getQueryAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__InternalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getInternalInternalKeyword_1_0()); }
		(
			{ before(grammarAccess.getQueryAccess().getInternalInternalKeyword_1_0()); }
			'internal'
			{ after(grammarAccess.getQueryAccess().getInternalInternalKeyword_1_0()); }
		)
		{ after(grammarAccess.getQueryAccess().getInternalInternalKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ParameterListAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getParameterListParameterListParserRuleCall_4_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getQueryAccess().getParameterListParameterListParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ExpressionsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getExpressionsExpressionParserRuleCall_6_0_0()); }
		ruleExpression
		{ after(grammarAccess.getQueryAccess().getExpressionsExpressionParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__DocumentationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
		RULE_DOCUMENTATION
		{ after(grammarAccess.getPreconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPreconditionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__ExpressionsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPreconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__DocumentationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
		RULE_DOCUMENTATION
		{ after(grammarAccess.getPostconditionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPostconditionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__ExpressionsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPostconditionAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_0_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__VariableNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getVariableNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getVariableNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getTypeNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__DocumentationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
		RULE_DOCUMENTATION
		{ after(grammarAccess.getInvariantAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__ExpressionsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getInvariantAccess().getExpressionsExpressionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
		ruleOrExpression
		{ after(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperationAlternatives_1_1_0()); }
		(rule__EqualityExpression__OperationAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOperationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__ComparisonExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightPlusOrMinusExpressionParserRuleCall_1_2_0()); }
		rulePlusOrMinusExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRightPlusOrMinusExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getRightMultiplicationOrDivisionExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicationOrDivisionExpression
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getRightMultiplicationOrDivisionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOrDivisionExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getMultiplicationOrDivisionExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionPrimaryExpressionParserRuleCall_1_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionPrimaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueAlternatives_2_1_0()); }
		(rule__ConstantExpression__ValueAlternatives_2_1_0)
		{ after(grammarAccess.getConstantExpressionAccess().getValueAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueNullKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getConstantExpressionAccess().getValueNullKeyword_3_1_0()); }
			'null'
			{ after(grammarAccess.getConstantExpressionAccess().getValueNullKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getConstantExpressionAccess().getValueNullKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OldValueExpression__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOldValueExpressionAccess().getExpressionPropertyPathExpressionParserRuleCall_3_0()); }
		rulePropertyPathExpression
		{ after(grammarAccess.getOldValueExpressionAccess().getExpressionPropertyPathExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPathExpressionAccess().getStatementsStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getPropertyPathExpressionAccess().getStatementsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPathExpression__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPathExpressionAccess().getStatementsNavigatedStatementParserRuleCall_2_0()); }
		ruleNavigatedStatement
		{ after(grammarAccess.getPropertyPathExpressionAccess().getStatementsNavigatedStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTargetSelfKeyword_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getTargetSelfKeyword_0_0()); }
			'self'
			{ after(grammarAccess.getStatementAccess().getTargetSelfKeyword_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getTargetSelfKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTargetDirectionParserRuleCall_1_0()); }
		ruleDirection
		{ after(grammarAccess.getStatementAccess().getTargetDirectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTargetIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStatementAccess().getTargetIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__MethodCallAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getMethodCallMethodCallParserRuleCall_0_1_0()); }
		ruleMethodCall
		{ after(grammarAccess.getNavigatedStatementAccess().getMethodCallMethodCallParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__TargetAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getTargetIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNavigatedStatementAccess().getTargetIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigatedStatement__CollectionTargetAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigatedStatementAccess().getCollectionTargetCollectionMethodParserRuleCall_2_1_0()); }
		ruleCollectionMethod
		{ after(grammarAccess.getNavigatedStatementAccess().getCollectionTargetCollectionMethodParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__TargetMethodAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getTargetMethodIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodCallAccess().getTargetMethodIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getParametersIDTerminalRuleCall_1_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodCallAccess().getParametersIDTerminalRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCollectionMethod__MethodAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleCollectionMethodAccess().getMethodAlternatives_0_0()); }
		(rule__SimpleCollectionMethod__MethodAlternatives_0_0)
		{ after(grammarAccess.getSimpleCollectionMethodAccess().getMethodAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__TypeSelectAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParametrizedCollectionMethodAccess().getTypeSelectIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametrizedCollectionMethod__IndexExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametrizedCollectionMethodAccess().getIndexExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParametrizedCollectionMethodAccess().getIndexExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOCUMENTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
